---
import BaseHead from "../../components/BaseHead.astro";
import Header from "../../components/Header.astro";
import Footer from "../../components/Footer.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../../consts";
import { getCollection, render } from "astro:content";
import { ClientRouter } from "astro:transitions";
import Reads from "../../layouts/Reads.astro";

const posts = (await getCollection("reads")).sort(
  (a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime()
);
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
    <ClientRouter />
    <style>
      main {
        width: 960px;
      }
      ul {
        display: flex;
        flex-wrap: wrap;
        gap: 2rem;
        list-style-type: none;
        margin: 0;
        padding: 0;
      }

      ul li * {
        text-decoration: none;
        transition: 0.2s ease;
      }
      ul {
        width: 100%;
        margin-bottom: 1rem;
        text-align: center;
      }

      .title {
        margin: 0;
        color: var(--text-light);
        line-height: 1;
      }
      .date {
        margin: 0;
        color: var(--gray-light);
      }
      
      @media (prefers-color-scheme: dark) {
        .title {
          color: var(--text-dark);
        }
        .date {
          color: var(--gray-light);
        }
      }
      
      ul li a:hover h4,
      ul li a:hover .date {
        color: var(--accent);
      }
      
      @media (prefers-color-scheme: dark) {
        ul li a:hover h4,
        ul li a:hover .date {
          color: var(--accent-dark);
        }
      }
      
      ul a:hover img {
        box-shadow: var(--box-shadow);
      }
      @media (max-width: 720px) {
        ul {
          gap: 0.5em;
        }
        ul li {
          width: 100%;
          text-align: center;
          margin-bottom: 0;
        }

        ul li:first-child .title {
          font-size: 1.563em;
        }
      }
    </style>
  </head>
  <body>
    <Header />
    <main>
      <section>
        <div class="blog-post">
          <ul>
            {
              await Promise.all(
                posts.map(async (post) => {
                  const { Content } = await render(post);
                  return (
                    <li>
                      <Reads {...post.data}>
                        <Content />
                      </Reads>
                    </li>
                  );
                })
              )
            }
          </ul>
        </div>
      </section>
    </main>
    <Footer />
  </body>
</html>
