---
import BaseHead from "../../components/BaseHead.astro";
import Header from "../../components/Header.astro";
import Footer from "../../components/Footer.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../../consts";
import { getCollection, type InferEntrySchema } from "astro:content";
import FormattedDate from "../../components/FormattedDate.astro";
import { ClientRouter } from "astro:transitions";
import { Image } from "astro:assets";

const imageRandom = `/blog-placeholder-${
  Math.floor(Math.random() * (5 - 2 + 1)) + 2
}.jpg`;

const blogposts = await getCollection("blog");
const database = (await getCollection("database")).map((post) => {
  //@ts-ignore # Currently it doesn't properly recognize the external property
  const coverImage: string | undefined = post.data.cover?.external?.url;
  return {
    ...post,
    data: {
      title: post.data.properties.Name,
      pubDate: post.data.properties.pubDate,
      description: "",
      heroImage: coverImage,
      tags: [],
    },
  };
});
const allPosts = [...blogposts, ...database];

const posts = allPosts.sort(
  (a, b) =>
    new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime()
);
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
    <ClientRouter />
    <style>
      main {
        width: 960px;
      }
      ul {
        display: flex;
        flex-wrap: wrap;
        gap: 2rem;
        list-style-type: none;
        margin: 0;
        padding: 0;
      }
      ul li {
        width: calc(50% - 1rem);
      }
      ul li * {
        text-decoration: none;
        transition: 0.2s ease;
      }
      ul li:first-child {
        width: 100%;
        margin-bottom: 1rem;
        text-align: center;
      }
      ul li:first-child img {
        width: 100%;
      }
      ul li:first-child .title {
        font-size: 2.369rem;
      }
      ul li img {
        margin-bottom: 0.5rem;
        border-radius: 12px;
      }
      ul li a {
        display: block;
      }
      .title {
        margin: 0;
        color: var(--text-light);
        line-height: 1;
      }
      .date {
        margin: 0;
        color: var(--gray-light);
      }
      @media (prefers-color-scheme: dark) {
        .title {
          color: var(--text-dark);
        }
        .date {
          color: var(--gray-light);
        }
      }
      ul li a:hover h4,
      ul li a:hover .date {
        color: var(--accent);
      }
      @media (prefers-color-scheme: dark) {
        ul li a:hover h4,
        ul li a:hover .date {
          color: var(--accent-dark);
        }
      }
      ul a:hover img {
        box-shadow: var(--box-shadow);
      }
      @media (max-width: 720px) {
        ul {
          gap: 0.5em;
        }
        ul li {
          width: 100%;
          text-align: center;
        }
        ul li:first-child {
          margin-bottom: 0;
        }
        ul li:first-child .title {
          font-size: 1.563em;
        }
      }
    </style>
  </head>
  <body>
    <Header />
    <main>
      <div class="blog-post">
        <section>
          <ul>
            {
              posts.map((post) => (
                <li>
                  <a href={`/blog/${post.id}`}>
                    {post.data.heroImage && (
                      <Image
                        width={720}
                        height={360}
                        fit="cover"
                        src={post.data.heroImage}
                        format="avif"
                        alt=""
                      />
                    )}
                    {!post.data.heroImage && (
                      <img
                        width={720}
                        height={360}
                        src={imageRandom}
                        alt={post.data.heroImageAlt || ""}
                      />
                    )}
                    <h4 class="title">{post.data.title}</h4>
                    <p class="date">
                      <FormattedDate date={post.data.pubDate} />
                    </p>
                  </a>
                </li>
              ))
            }
          </ul>
        </section>
      </div>
    </main>
    <Footer />
  </body>
</html>
